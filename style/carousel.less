// ------ Carousel Variables ------
@carousel__dotWidth: 12px;
@carousel__dotHeight: 12px;
@carousel__dotAlign: center;
@carousel__dotBorderColor: @white;
@carousel__dotBorderColorActive: @carousel__dotBorderColor;
@carousel__dotBackgroundColor: transparent;
@carousel__dotBackgroundColorActive: @carousel__dotBorderColor;
@carousel__dotTouchTargetSize: 40px;

@carousel__kenBurnsSlideRelativeSelector: ~'img';
@carousel__kenBurnsTimingFunction: ease;
@carousel__kenBurnsSpeed: 9s;
@carousel__kenBurnsScale: 1.2;
@carousel__kenBurnsScaleActive: 1;

@local__marginBottom: max( 0, ( @carousel__dotTouchTargetSize - @carousel__dotHeight ) / 2 );

.carousel {
	.slick-arrow {
		font-size: 3.5rem;
		opacity: .5;
		display: block;
		width: 10rem;
		position: absolute;
		top: 0;
		bottom: 0;
		z-index: 50;
		color: @white;
		filter: drop-shadow( 0 0 1rem rgba( 0,0,0,.7 ));
		background-color: transparent;
		border: none;
		transition: opacity 400ms;
		&.slick-prev {
			left: 0;
			text-align: left;
			padding-left: .7vw;
		}
		&.slick-next {
			right: 0;
			text-align: right;
			padding-right: .7vw;
		}
		&:hover {
			opacity: 1;
		}
		&:active {
			opacity: 1;
		}
		&:focus {
			opacity: 1;
			outline: none;
		}
	}
	.slick-dots {	
		position: absolute;
		bottom: 0;
		width: 100%;
		padding-left: 0;
		padding-bottom: 0;
		margin-bottom: @local__marginBottom;
		z-index: 100;
		display: flex;
		flex-wrap: wrap-reverse;
		& when ( @carousel__dotAlign = left ) {
			justify-content: flex-start;
		}
		& when ( @carousel__dotAlign = center ) {
			justify-content: center;
		}
		& when ( @carousel__dotAlign = right ) {
			justify-content: flex-end;
		}
		li {
			display: inline-block;
			flex: 1 0 @carousel__dotWidth;
			max-width: max( @carousel__dotTouchTargetSize, @carousel__dotWidth );
			min-height: @carousel__dotTouchTargetSize;
		}
		button {
			width: 100%;
			height: 100%;
			display: flex;
			align-items: center;
			justify-content: center;
			font-size: 0;
			padding: 0;
			margin: 0;
			background-color: transparent;
			border: none;
			&::after {
				content: "";
				display: block;
				width: @carousel__dotWidth;
				height: @carousel__dotHeight;
				background-color: @carousel__dotBackgroundColor;
				border: 1px solid @carousel__dotBorderColor;
				box-shadow: 0 0 1rem rgba( 0,0,0,.3 ), inset 0 0 1rem rgba( 0,0,0,.1 );
				border-radius: 100%;
			}
		}
		.slick-active button::after {
			background-color: @carousel__dotBackgroundColorActive;
			border: 1px solid @carousel__dotBorderColorActive;
			box-shadow: 0 0 1rem rgba( 0,0,0,.3 );
		}
	}
	& {
		transition: background-color 1000ms;
		> * {
			transition: opacity 400ms;
			opacity: 1;
		}
		&.preload {
			height: 0;
			background-color: transparent;
			> * {
				opacity: 0;
			}
		}
	}
	.slick-slide {
		position: relative;
		min-height: 0;
	}
	
	&.carousel__kenBurns {
		.slick-slide @{carousel__kenBurnsSlideRelativeSelector} {
			transition: opacity 3000ms, transform @carousel__kenBurnsTimingFunction @carousel__kenBurnsSpeed !important;
			transform: scale( @carousel__kenBurnsScale );
		}
		.slick-slide.slick-active @{carousel__kenBurnsSlideRelativeSelector} {
			transform: scale( @carousel__kenBurnsScaleActive );
		}
	}
}
